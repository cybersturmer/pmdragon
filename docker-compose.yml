version: "3.8"
services:
  web:
    restart: always
    build:
      context: .
      dockerfile: ./pmdragon-client/Dockerfile
    ports:
      - 80:80
      - 443:443
    depends_on:
      - api
    volumes:
      - static_volume:/srv/www/pmdragon/static
      - media_volume:/srv/www/pmdragon/media
      - ./pmdragon-client/nginx.conf:/etc/nginx/nginx.conf
      - uvicorn_socket:/uvicorn_socket
  api: &api
    restart: always
    build:
      context: ./pmdragon-core-api/
      dockerfile: Dockerfile
    env_file: 
      - ./pmdragon-core-api/env/email.env
    environment:
      - IS_DEBUG=True
      - DJANGO_SECRET_KEY=w*ea%hd29u-&l&rol@5zo8sadsad5o\\=@wb+i*r(@_+fnuc!*^9o0w
      - DJANGO_SETTINGS_MODULE=conf.production.settings
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=pmdragon
      - POSTGRES_USER=pmdragon
      - POSTGRES_PASSWORD=wAzA9OZjZ1DIZbBaRI+bKg==
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - rabbit
      - redis
      - worker
    volumes:
      - static_volume:/srv/www/pmdragon/static
      - media_volume:/srv/www/pmdragon/media
      - ./pmdragon-core-api:/srv/www/pmdragon
      - uvicorn_socket:/uvicorn_socket
    command: docker-entrypoint.sh
  postgres:
    image: postgres:12.2
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=pmdragon
      - POSTGRES_USER=pmdragon
      - POSTGRES_PASSWORD=wAzA9OZjZ1DIZbBaRI+bKg==
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pgbackup:/var/lib/postgresql/backups
  rabbit:
    hostname: rabbit
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15762 # rabbitmq management plugin
  redis:
    hostname: redis
    image: redis:latest
    ports:
      - 6379:6379
  worker:
    <<: *api
    command: sh ./celery-entrypoint.sh
    ports: []
    depends_on: 
      - rabbit
      - postgres
volumes:
  uvicorn_socket:
    driver: local
  pgdata:
    driver: local
  pgbackup:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local